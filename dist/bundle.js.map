{"version":3,"sources":["webpack:///webpack/bootstrap 48005b898e4d3e3c765f","webpack:///./src/index.ts","webpack:///external \"Rx\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,oCAAoC,EAAE,kBAAkB,yBAAyB,EAAE,eAAe,4BAA4B,EAAE;AAC3L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA,4CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,uCAAuC,EAAE;AAChE;AACA;;;;;;;ACrDA,qB","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 48005b898e4d3e3c765f","\"use strict\";\nvar Rx = require('rxjs/Rx');\n/*\nText Area\n*/\nvar textArea = document.getElementById('text');\nfunction getText() {\n    return textArea.value;\n}\nvar textSubscriber = Rx.Subscriber.create(function (text) { return textArea.value = text || ''; }, function (err) { return console.log(err); }, function () { return console.log('done'); });\n/* Text Area */\n/*\nButtons\n*/\n// swap two lines and join\nvar swapTwoLinesAndJoinButton = document.getElementById('swapTwoLines_join');\nvar swapTwoLinesAndJoin$ = Rx.Observable.fromEvent(swapTwoLinesAndJoinButton, 'click');\n/* Buttons */\n/*\nFunctions\n*/\n// swap two lines and join\nvar EMPTY_LINE_REGEX = /^[ \\t]*$/;\nfunction swapTwoLinesAndJoin(text, sep) {\n    if (sep === void 0) { sep = ' '; }\n    var result = [];\n    var state = 1;\n    // 1 means that we need first line of two lines to be joined\n    // 2 means that we need second line of two lines to be joined\n    for (var _i = 0, _a = text.split('\\n'); _i < _a.length; _i++) {\n        var line = _a[_i];\n        if (EMPTY_LINE_REGEX.test(line)) {\n            result.push(line);\n        }\n        else if (state === 1) {\n            result.push(line);\n            state = 2;\n        }\n        else {\n            var firstLine = result.pop();\n            result.push(line + sep + firstLine);\n            state = 1;\n        }\n    }\n    return result.join('\\n');\n}\n/* Functions */\n/*\nCombine All Parts\n*/\nswapTwoLinesAndJoin$\n    .map(function (_) { return swapTwoLinesAndJoin(getText()); })\n    .subscribe(textSubscriber);\n/* Combine All Parts */ \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 0\n// module chunks = 0","module.exports = Rx;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Rx\"\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}